---
- hosts: local
  connection: local
  gather_facts: true

  vars:
    key_name: awsofficekey
    region: us-east-2
    image: ami-0fc20dd1da406780b
    instance_type: t2.micro
    security_group: webserver_sg
    count: 1
  tasks:
  - name: Create a security group
    ec2_group:
      name: "{{ security_group }}"
      description: The webservers security group
      region: "{{ region }}"
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0
  - name: Upload public key to AWS
    ec2_key:
      name: "{{ key_name }}"
      key_material: "{{ lookup('file', '/root/Ansible/{{ key_name }}.pub') }}"
      region: "{{ region }}"
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
  - name: Launch the new EC2 Instance
    ec2:
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      group: "{{ security_group }}"
      instance_type: "{{ instance_type }}"
      image: "{{ image }}"
      wait: true 
      region: "{{ region }}"
      key_name: "{{ key_name }}"
      count_tag:
        Name: "ansible/Client"
      instance_tags:
        Name: "ansible/Client"
        role: "ansible-lab"
      exact_count: 1
    register: ec2
  - name: Add the newly created EC2 instance(s) to host group
    lineinfile:
      dest: /etc/ansible/hosts
      regexp: "{{ item.public_ip }}"
      insertafter: "[webserver]" 
      line: "{{ item.public_ip }}"
      state: present
    with_items: "{{ ec2.tagged_instances }}"
