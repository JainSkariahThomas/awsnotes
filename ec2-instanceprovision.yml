---
#This script is use to provison ec2 ubuntu ami and install security group alomg with service, add key and IP (to host)
#Here the adding IP to hosts is not working correctly need to fix that issue
- hosts: local
  connection: local
  gather_facts: true
#Declare Variable that needed for the ec2 creation
  vars:
    key_name: awsofficekey
    region: us-east-2
    image: ami-0fc20dd1da406780b
    instance_type: t2.micro
    security_group: webserver_sg
    count: 1
#Declare the Task First to Setup Secirity Group:
  tasks:
  - name: Create a security group
    ec2_group:
      name: "{{ security_group }}"
      description: The webservers security group
      region: "{{ region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0
#Declare steps tp upload Public_key to the server so that we can enable access to the ec2 Instance
  - name: Upload public key to AWS
    ec2_key:
      name: "{{ key_name }}"
      key_material: "{{ lookup('file', '/home/adminz/JAINAWS/Docker/awsnotes/{{ key_name }}.pub') }}"
      region: "{{ region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
#Declaring EC2 Launch configuration steps 
  - name: Launch the new EC2 Instance
    ec2:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      group: "{{ security_group }}"
      instance_type: "{{ instance_type }}"
      image: "{{ image }}"
      wait: true 
      region: "{{ region }}"
      key_name: "{{ key_name }}"
      count: "{{count}}"
    register: ec2
  - name: Add the newly created host so that we can further contact it
    add_host:
      name: "{{ item.public_ip }}"
      groups: webservers
    with_items: "{{ ec2.instances }}"

  - name: Add tag to Instance(s)
    ec2_tag:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      resource: "{{ item.id }}" 
      region: "{{ region }}" 
      state: "present"
    with_items: "{{ ec2.instances }}"
    args:
      tags:
        Type: webserver

- hosts: webservers
  remote_user: ubuntu
  become: yes
  gather_facts: no
  tasks:
   - name: Install Apache
     apt:
       name: apache2
       state: present
   - service: 
       name: apache2
       state: started
       enabled: yes

